@model Proyecto_1.Models.llantas

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutCompras.cshtml";
}

<h2>Editar llanta  @ViewBag.img</h2>

@using (Html.BeginForm("Edit", "llantas", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="row">
            <div class="col">
                <div class="form-group text-left">
                    <label>Modelo:</label>
                    @Html.EditorFor(model => model.modelo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modelo, "", new { @class = "text-danger" })
                </div>

                <div class="form-group text-left">
                    <label>Carga:</label>
                    @Html.EditorFor(model => model.carga, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.carga, "", new { @class = "text-danger" })
                </div>

                <div class="form-group text-left">
                    <label>Rin:</label>
                    @Html.EditorFor(model => model.rin, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.rin, "", new { @class = "text-danger" })
                </div>

                <div class="form-group text-left">
                    <label>Ancho:</label>
                    @Html.EditorFor(model => model.ancho, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ancho, "", new { @class = "text-danger" })
                </div>

                <div class="form-group text-left">
                    <label>Perfil:</label>
                    @Html.EditorFor(model => model.perfil, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.perfil, "", new { @class = "text-danger" })
                </div>

                <div class="form-group text-left">
                    <label>Stock:</label>
                    @Html.EditorFor(model => model.stock, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.stock, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col">
                <div class="form-group text-left">
                    <label>Descripción:</label>
                    @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                </div>

                <div class="form-group text-left">
                    <label>Imagen:</label>
                    <input type="file" id="imagenLlanta" name="imagenLlanta" accept="image/*" />
                </div>
                <div class="form-group">
                    <img class="border" src="~/Imagenes/llantas/@ViewData["imagenL"]" width="335" id="imagenSalida" />
                </div>

            </div>

            <div class="col">
                <div class="form-group text-left">
                    <label>Precio de venta:</label>
                    @Html.EditorFor(model => model.precioVenta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.precioVenta, "", new { @class = "text-danger" })
                </div>

                <div class="form-group text-left">
                    <label>Precio de compra:</label>
                    @Html.EditorFor(model => model.precioCompra, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.precioCompra, "", new { @class = "text-danger" })
                </div>

                <div class="form-group text-left">
                    <label>Proveedor:</label>
                    @Html.DropDownList("id_proveedor", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.id_proveedor, "", new { @class = "text-danger" })
                </div>

                <div class="form-group text-left">
                    <label>Categoría:</label>
                    @Html.DropDownList("id_categoria", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.id_subcategoria, "", new { @class = "text-danger" })
                </div>

                <div class="form-group text-left">
                    <label>Subcategoría:</label>
                    @Html.DropDownList("id_subcategoria", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.id_subcategoria, "", new { @class = "text-danger" })
                </div>

                <div class="form-group text-left">
                    <label>Marca:</label>
                    @Html.DropDownList("id_marca", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.id_marca, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <input type="submit" value="Guardar cambios" class="btn boton" />
        </div>
    </div>
}

<script>
    var cboCategorias = document.getElementById("id_categoria");
    cboCategorias.addEventListener("change", Refresh);
    Refresh();
    function Refresh()
    {
        fetch("@Url.Content("~/llantas/obtenerSubcategoriasList")" + "?categoriaID=" + cboCategorias.value)
            .then(function (result) {
                if (result.ok)
                {
                    return result.json();
                }
            })
            .then(function (data) {
                console.log(data);
                cboSub = document.getElementById("id_subcategoria");
                cboSub.innerHTML = "";
                data.forEach(function (element) {

                    let opt = document.createElement("option");
                    opt.appendChild(document.createTextNode(element.Text));
                    opt.value = element.Value;
                    cboSub.appendChild(opt);
                })
            })
    }
</script>

<div>
    @Html.ActionLink("Ver llantas", "Index", new { id = "" }, new { @class = "link-item" })
</div>
